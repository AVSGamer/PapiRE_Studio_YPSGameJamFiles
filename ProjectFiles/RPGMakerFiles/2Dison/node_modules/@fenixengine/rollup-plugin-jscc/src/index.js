import makeFilter from './make-filter'
import parseOptions from './parse-options'
import procFile from './proc-file'

const DEFAULT_EXTENSIONS = ['.js', '.jsx', '.ts', '.tsx', '.mjs', '.tag']

function incrementFoundExprs(exprsMap, exprsToAdd) {
  if (!exprsMap || !exprsToAdd) {
    return
  }
  if (exprsToAdd.size > 0) {
    const iterator = exprsToAdd.entries()
    let result = iterator.next();

    while (!result.done) {
      if (result.value) {
        const exprName = result.value[0]
        const exprAmount = result.value[1]
        if (exprsMap.has(exprName)) {
          exprsMap.set(exprName, exprsMap.get(exprName) + exprAmount);
        } else {
          exprsMap.set(exprName, exprAmount);
        }
      }
      result = iterator.next();
    }
  }

}

/**
 * rollup-plugin-jscc entry point
 *
 * @param {import('..').Options} options User options
 * @returns {import('rollup').Plugin}
 */
export default function jsccPlugin (options) {
  options = parseOptions(options)

  const filter = makeFilter(options, DEFAULT_EXTENSIONS)
  const allExprsFound = new Map()

  if (options.asloader !== false) {
    return {
      name: 'jscc',
      async load(id) {
        try {
          if (filter(id)) {
            const result = await procFile(id, options)
            if (options.onComplete && typeof options.onComplete === 'function') {
              options.onComplete(result);
            }
            return result
          }

          return null
        } catch (error) {
          throw new Error(error)
        }
      },
    }
  }

  return {
    name: 'jscc',
    async transform(code, id) {
      try {
        if (filter(id)) {
          const result = await procFile(id, options, code)
          incrementFoundExprs(allExprsFound, result.foundExprs)
          return result
        }

        return null
      } catch (error) {
        throw new Error(error)
      }
    },

    generateBundle() {
      if (options.onComplete && typeof options.onComplete === 'function') {
        options.onComplete({ foundExprs: allExprsFound })
      }
    },
  }
}
