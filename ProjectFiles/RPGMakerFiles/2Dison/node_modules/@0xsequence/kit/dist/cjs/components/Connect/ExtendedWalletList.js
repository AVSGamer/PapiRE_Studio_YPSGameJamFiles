"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExtendedWalletList = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const design_system_1 = require("@0xsequence/design-system");
const wagmi_1 = require("wagmi");
const ExtendedWalletList = ({ onConnect, connectors }) => {
    const { theme } = (0, design_system_1.useTheme)();
    const { isPending } = (0, wagmi_1.useConnect)();
    return ((0, jsx_runtime_1.jsx)(design_system_1.Box, { flexDirection: "column", gap: "2", marginTop: "5", children: connectors.map(connector => {
            const Logo = theme === 'dark' ? connector._wallet.logoDark : connector._wallet.logoLight;
            const walletName = connector._wallet.name;
            const connectorId = connector._wallet.id;
            return ((0, jsx_runtime_1.jsx)(design_system_1.Button, { width: "full", shape: "square", leftIcon: () => ((0, jsx_runtime_1.jsx)(design_system_1.Box, { justifyContent: "center", alignItems: "center", style: { backgroundColor: connector._wallet.iconBackground }, width: "8", height: "8", overflow: "hidden", children: (0, jsx_runtime_1.jsx)(Logo, { style: { width: 30 } }) })), onClick: () => onConnect(connector), label: (0, jsx_runtime_1.jsxs)(design_system_1.Text, { children: [walletName, isPending] }) }, connectorId));
        }) }));
};
exports.ExtendedWalletList = ExtendedWalletList;
//# sourceMappingURL=ExtendedWalletList.js.map