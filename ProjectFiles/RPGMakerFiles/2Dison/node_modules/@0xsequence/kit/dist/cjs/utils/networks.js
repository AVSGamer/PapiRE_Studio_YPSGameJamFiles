"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNetwork = exports.getNetworkBackgroundColor = exports.getNetworkColor = void 0;
const network_1 = require("@0xsequence/network");
const getNetworkColor = (chainId, mode = 'light') => {
    switch (chainId) {
        case network_1.ChainId.MAINNET:
            return mode === 'light' ? '#abf' : '#abf';
        case network_1.ChainId.POLYGON:
            return mode === 'light' ? '#c7a6ff' : '#c7a6ff';
        case network_1.ChainId.ARBITRUM:
            return mode === 'light' ? '#52A7E6' : '#52A7E6';
        case network_1.ChainId.OPTIMISM:
            return mode === 'light' ? '#DB3132' : '#DB3132';
        case network_1.ChainId.BSC:
            return mode === 'light' ? '#CB9C1D' : '#EEB445';
        case network_1.ChainId.AVALANCHE:
            return mode === 'light' ? '#E84142' : '#E84142';
        case network_1.ChainId.GNOSIS:
            return mode === 'light' ? '#00193C' : '#D8E8FF';
        case network_1.ChainId.GOERLI:
            return mode === 'light' ? '#A77A00' : '#FFA700';
        case network_1.ChainId.POLYGON_MUMBAI:
        case network_1.ChainId.POLYGON_AMOY:
            return mode === 'light' ? '#D68828' : '#FFA700';
        default:
            return mode === 'light' ? '#abf' : '#abf';
    }
};
exports.getNetworkColor = getNetworkColor;
const getNetworkBackgroundColor = (chainId, mode = 'light') => {
    switch (chainId) {
        case network_1.ChainId.MAINNET:
            return mode === 'light' ? '#132362' : '#132362';
        case network_1.ChainId.POLYGON:
            return mode === 'light' ? '#350881' : '#350881';
        case network_1.ChainId.ARBITRUM:
            return mode === 'light' ? '#EDF7FF' : '#0C3754';
        case network_1.ChainId.OPTIMISM:
            return mode === 'light' ? '#FFEAE9' : '#390B0C';
        case network_1.ChainId.BSC:
            return mode === 'light' ? '#FFE8AB' : '#554018';
        case network_1.ChainId.AVALANCHE:
            return mode === 'light' ? '#FBDFDF' : '#390B0C';
        case network_1.ChainId.GNOSIS:
            return mode === 'light' ? '#D8E8FF' : '#00193C';
        case network_1.ChainId.GOERLI:
            return mode === 'light' ? '#FFD871' : '#554018';
        case network_1.ChainId.POLYGON_MUMBAI:
        case network_1.ChainId.POLYGON_AMOY:
            return mode === 'light' ? '#FFE8CD' : '#554018';
        default:
            return mode === 'light' ? '#132362' : '#132362';
    }
};
exports.getNetworkBackgroundColor = getNetworkBackgroundColor;
const getNetwork = (chainId) => {
    const network = network_1.networks[chainId];
    if (!network) {
        throw new Error(`Unknown network chainId: ${chainId}`);
    }
    return network;
};
exports.getNetwork = getNetwork;
//# sourceMappingURL=networks.js.map