import { SignInResponse } from '@0xsequence/waas';
import { ExtendedConnector } from '../types';
interface SuccessResultV1 {
    version: 1;
    idToken: string;
}
interface SuccessResultV2 {
    version: 2;
    signInResponse: SignInResponse;
}
export declare function useEmailAuth({ connector, onSuccess }: {
    connector?: ExtendedConnector;
    onSuccess: (result: SuccessResultV1 | SuccessResultV2) => void;
}): {
    inProgress: boolean;
    loading: boolean;
    error: undefined;
    initiateAuth: (_email: string) => Promise<void>;
    sendChallengeAnswer: (_answer: string) => Promise<void>;
    cancel?: undefined;
} | {
    inProgress: boolean;
    loading: boolean;
    error: Error | undefined;
    initiateAuth: (email: string) => Promise<void>;
    sendChallengeAnswer: (answer: string) => Promise<void>;
    cancel: () => void;
};
export {};
//# sourceMappingURL=useWaasEmailAuth.d.ts.map