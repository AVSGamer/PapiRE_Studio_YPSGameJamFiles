import { CreateConnectorFn } from 'wagmi';
import { WalletType } from '../types';
export interface CommonConnectorOptions {
    appName: string;
    projectAccessKey: string;
    defaultChainId?: number;
}
export interface DefaultWaasConnectorOptions extends CommonConnectorOptions {
    waasConfigKey: string;
    enableConfirmationModal?: boolean;
    isDev?: boolean;
    email?: boolean;
    google?: false | {
        clientId: string;
    };
    apple?: false | {
        clientId: string;
        redirectURI: string;
    };
    coinbase?: boolean;
    walletConnect?: false | {
        projectId: string;
    };
    /**
     * @deprecated use connectors.walletConnect.projectId instead
     */
    walletConnectProjectId?: string;
    /**
     * @deprecated, use connectors.google.clientId instead
     */
    googleClientId?: string;
    /**
     * @deprecated, use connectors.apple.clientId instead
     */
    appleClientId?: string;
    /**
     * @deprecated, use connectors.apple.redirectURI instead
     */
    appleRedirectURI?: string;
}
export interface DefaultUniversalConnectorOptions extends CommonConnectorOptions {
    sequence?: boolean;
    email?: boolean;
    google?: boolean;
    facebook?: boolean;
    twitch?: boolean;
    apple?: boolean;
    walletConnect?: false | {
        projectId: string;
    };
    /**
     * @deprecated, use connectors.walletConnect.projectId instead
     */
    walletConnectProjectId?: string;
}
export type DefaultConnectorOptions<T extends WalletType> = T extends 'waas' ? DefaultWaasConnectorOptions : DefaultUniversalConnectorOptions;
export declare const getDefaultConnectors: <T extends WalletType>(walletType: T, options: DefaultConnectorOptions<T>) => CreateConnectorFn[] | undefined;
export declare const getDefaultWaasConnectors: (options: DefaultWaasConnectorOptions) => CreateConnectorFn[];
export declare const getDefaultUniversalConnectors: (options: DefaultUniversalConnectorOptions) => CreateConnectorFn[];
//# sourceMappingURL=defaultConnectors.d.ts.map