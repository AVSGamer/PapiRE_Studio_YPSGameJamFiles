import { ChainId } from '@0xsequence/network';
declare const nameToId: {
    [name: string]: ChainId;
};
type NameToIdType = typeof nameToId;
type IdToNameType = {
    [K in keyof NameToIdType as NameToIdType[K]]: K;
};
export type SimpleNetwork = keyof NameToIdType | keyof IdToNameType;
export declare function isSimpleNetwork(network: any): network is SimpleNetwork;
export declare function toNetworkID(network: SimpleNetwork): keyof IdToNameType;
export declare function nameOfNetwork(network: SimpleNetwork): keyof NameToIdType;
export declare function rpcNode(network: SimpleNetwork): string;
export type WithSimpleNetwork<T> = Omit<T, 'chainId' | 'wallet'> & {
    network?: SimpleNetwork;
};
export {};
