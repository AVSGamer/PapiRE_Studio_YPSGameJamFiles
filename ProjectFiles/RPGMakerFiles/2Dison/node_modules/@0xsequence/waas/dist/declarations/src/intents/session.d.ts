import { Intent } from "./base.js";
import { IntentDataCloseSession, IntentDataFinishValidateSession, IntentDataGetSession, IntentDataListSessions, IntentDataOpenSession, IntentDataValidateSession, IntentDataSessionAuthProof, IntentDataInitiateAuth, IntentDataGetIdToken } from "../clients/intent.gen.js";
interface BaseArgs {
    lifespan: number;
}
export type InitiateAuthArgs = BaseArgs & IntentDataInitiateAuth;
export declare function initiateAuth({ lifespan, ...data }: InitiateAuthArgs): Promise<Intent<IntentDataInitiateAuth>>;
export type OpenSessionArgs = BaseArgs & IntentDataOpenSession;
export declare function openSession({ lifespan, ...data }: OpenSessionArgs): Promise<Intent<IntentDataOpenSession>>;
export type ValidateSessionArgs = BaseArgs & IntentDataValidateSession;
export declare function validateSession({ lifespan, ...data }: ValidateSessionArgs): Promise<Intent<IntentDataValidateSession>>;
export type FinishValidateSessionArgs = BaseArgs & IntentDataFinishValidateSession;
export declare function finishValidateSession({ lifespan, ...data }: FinishValidateSessionArgs): Intent<IntentDataFinishValidateSession>;
export type CloseSessionArgs = BaseArgs & IntentDataCloseSession;
export declare function closeSession({ lifespan, ...data }: CloseSessionArgs): Intent<IntentDataCloseSession>;
export type ListSessionsArgs = BaseArgs & IntentDataListSessions;
export declare function listSessions({ lifespan, ...data }: ListSessionsArgs): Intent<IntentDataListSessions>;
export type GetSessionArgs = BaseArgs & IntentDataGetSession;
export declare function getSession({ lifespan, ...data }: GetSessionArgs): Intent<IntentDataGetSession>;
export type SessionAuthProof = BaseArgs & IntentDataSessionAuthProof;
export declare function sessionAuthProof({ lifespan, ...data }: SessionAuthProof): Intent<IntentDataSessionAuthProof>;
export type GetIdTokenArgs = BaseArgs & IntentDataGetIdToken;
export declare function getIdToken({ lifespan, ...data }: GetIdTokenArgs): Intent<IntentDataGetIdToken>;
export {};
