import { ElementType, ReactElement, ComponentPropsWithRef, ComponentPropsWithoutRef } from 'react';
import { Atoms } from '../../css';
export type BoxProps<T extends ElementType = 'div'> = ComponentPropsWithoutRef<T> & {
    as?: T;
    sx?: Atoms;
    ref?: ComponentPropsWithRef<T>['ref'] | null;
} & Atoms;
export type PolymorphicProps<P, T extends ElementType> = P & BoxProps<T>;
export type PolymorphicComponent<P, D extends ElementType = 'div'> = <T extends ElementType = D>(props: PolymorphicProps<P, T>) => ReactElement | null;
export type PolymorphicRef<T extends ElementType = 'div'> = BoxProps<T>['ref'];
export declare const Box: PolymorphicComponent<{}, 'div'>;
