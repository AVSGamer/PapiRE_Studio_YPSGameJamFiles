import { ReactNode, ComponentPropsWithoutRef } from 'react';
import * as TabsPrimitive from '@radix-ui/react-tabs';
export { TabsPrimitive };
export interface TabsProps extends ComponentPropsWithoutRef<typeof TabsPrimitive.Root> {
    tabs: (TabItemProps & {
        content: ReactNode;
    })[];
}
export interface TabItemProps {
    value: string;
    label: ReactNode;
}
export declare const Tabs: (props: TabsProps) => import("react/jsx-runtime").JSX.Element | null;
export interface TabsHeaderProps {
    tabs: TabItemProps[];
    value: string | undefined;
}
export declare const TabsHeader: (props: TabsHeaderProps) => import("react/jsx-runtime").JSX.Element | null;
export declare const TabsRoot: import('react').ForwardRefExoticComponent<TabsPrimitive.TabsProps & import('react').RefAttributes<HTMLDivElement>>;
export declare const TabsList: import('react').ForwardRefExoticComponent<TabsPrimitive.TabsListProps & import('react').RefAttributes<HTMLDivElement>>;
export declare const TabsTrigger: import('react').ForwardRefExoticComponent<TabsPrimitive.TabsTriggerProps & import('react').RefAttributes<HTMLButtonElement>>;
export declare const TabsContent: import('react').ForwardRefExoticComponent<TabsPrimitive.TabsContentProps & import('react').RefAttributes<HTMLDivElement>>;
