export declare const scroll: import('@vanilla-extract/recipes').RuntimeFn<{
    direction: {
        vertical: {
            height: "100%";
            overflowY: "auto";
            overscrollBehaviorY: "contain";
        };
        horizontal: {
            overflowX: "auto";
            overscrollBehaviorX: "contain";
            width: "100%";
        };
    };
}>;
export declare const overlay: import('@vanilla-extract/recipes').RuntimeFn<{
    shadows: {
        true: {
            '::before': {
                content: "";
                position: "absolute";
                zIndex: number;
                pointerEvents: "none";
            };
            '::after': {
                content: "";
                position: "absolute";
                zIndex: number;
                pointerEvents: "none";
            };
        };
        false: {
            '::before': {
                display: "none";
            };
            '::after': {
                display: "none";
            };
        };
    };
    direction: {
        vertical: {
            '::before': {
                background: `linear-gradient(to top, transparent 0%, var(--${string}) 100%)` | `linear-gradient(to top, transparent 0%, var(--${string}, ${string}) 100%)` | `linear-gradient(to top, transparent 0%, var(--${string}, ${number}) 100%)`;
                left: number;
                top: number;
                width: "100%";
                height: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            '::after': {
                background: `linear-gradient(to bottom, transparent 0%, var(--${string}) 100%)` | `linear-gradient(to bottom, transparent 0%, var(--${string}, ${string}) 100%)` | `linear-gradient(to bottom, transparent 0%, var(--${string}, ${number}) 100%)`;
                left: number;
                bottom: number;
                width: "100%";
                height: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
        };
        horizontal: {
            '::before': {
                background: `linear-gradient(to left, transparent 0%, var(--${string}) 100%)` | `linear-gradient(to left, transparent 0%, var(--${string}, ${string}) 100%)` | `linear-gradient(to left, transparent 0%, var(--${string}, ${number}) 100%)`;
                left: number;
                top: number;
                height: "100%";
                width: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            '::after': {
                background: `linear-gradient(to right, transparent 0%, var(--${string}) 100%)` | `linear-gradient(to right, transparent 0%, var(--${string}, ${string}) 100%)` | `linear-gradient(to right, transparent 0%, var(--${string}, ${number}) 100%)`;
                right: number;
                top: number;
                height: "100%";
                width: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
        };
    };
}>;
